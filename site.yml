# Ansible Playbook for Subutai TICK blueprint
---

- hosts: all
  gather_facts: false
  remote_user: root

  handlers:

    - name: restart mosquitto
      systemd:
        name: mosquitto
        state: restarted

    - name: restart influxdb
      systemd:
        name: influxdb
        state: restarted

    - name: restart telegraf
      systemd:
        name: telegraf
        state: restarted

    - name: restart grafana-server
      systemd:
        name: grafana-server 
        state: restarted 

  tasks: 

    - name: Disable dpkg fsync
      shell: echo force-unsafe-io > /etc/dpkg/dpkg.cfg.d/unsafe-io
      args: 
        creates: /etc/dpkg/dpkg.cfg.d/unsafe-io

    - name: Set apt prefs
      template:
        src: files/preferences
        dest: /etc/apt/preferences

    - name: Upgrade old Debian stuff
      apt:
        upgrade: yes
        
    - name: Install required debs
      apt:
        name: "{{ packages }}"
        state: present
      vars: 
        packages:
        - dirmngr
        - ca-certificates
        - xz-utils
        - python3-apt
        - apt-transport-https

    - name: Install influxdata repo key
      apt_key: 
        id: 684A14CF2582E0C5
        keyserver: keyserver.ubuntu.com

    - name: Install grafana repo key 
      apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present

    - name: Add influx repo
      apt_repository:
        repo: deb https://repos.influxdata.com/debian stretch stable
        state: present

    - name: Add grafana repo
      apt_repository: 
        repo: deb https://packages.grafana.com/oss/deb stable main
        state: present
  
    - name: Add debian buster
      apt_repository: 
        repo: deb http://httpredir.debian.org/debian/ buster main contrib non-free
        state: present

    - name: apt update
      apt:
        update_cache: true
        
    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - mosquitto
        - mosquitto-clients
        - python-influxdb
        - telegraf
        - influxdb
        - grafana

    - name: Set mosquitto password
      shell: touch /etc/mosquitto/passwd && mosquitto_passwd -b /etc/mosquitto/passwd "{{ mqttusername }}" "{{ mqttpassword }}"
      args: 
        creates: /etc/mosquitto/passwd
      notify: restart mosquitto

    - name: Disable anonymous mqtt access
      template: 
        src: files/require_auth.conf
        dest: /etc/mosquitto/conf.d/require_auth.conf
      notify: restart mosquitto

    - name: Create InfluxDB database
      influxdb_database:
        database_name: iot
        state: present
      notify: restart influxdb

    - name: Create InfluxDB user
      influxdb_user:
        user_name: "sandbox"
        user_password: "sandbox"
        admin: yes
        state: present
      notify: restart influxdb

    - name: Install telegraf.conf
      template:
        src: files/telegraf.conf
        dest: /etc/telegraf/telegraf.conf
      notify: restart telegraf

    - name: Create dashboards folder
      file: 
        path: /var/lib/grafana/dashboards/
        state: directory
        mode: 0755

    - name: Copy dashboard configuration
      template: 
        src: files/iot-sandbox.json
        dest: /var/lib/grafana/dashboards/iot-sandbox.json

    - name: Configure Grafana datasource
      template: 
        src: files/influx.yaml
        dest: /etc/grafana/provisioning/datasources/influx.yaml

    - name: Remove old dashboard
      file: 
        path: /etc/grafana/provisioning/dashboards/sample.yaml
        state: absent

    - name: Install new dashboard
      template: 
        src: files/iot-dashboards.yaml
        dest: /etc/grafana/provisioning/dashboards/iot-dashboards.yaml

    - name: Make sure grafana is enabled
      systemd:
        name: grafana-server 
        enabled: yes
        masked: no
        state: restarted      

    - name: Wait for grafana
      wait_for:
        port: 3000
        state: started
        delay: 10

    - name: Set up password for Grafana admin account
      uri:
        url: http://127.0.0.1:3000/api/user/password
        method: PUT
        body_format: json
        user: admin
        password: admin
        force_basic_auth: yes
        body: '{"oldPassword": "admin", "newPassword": "{{ grafanapassword }}", "confirmNew": "{{ grafanapassword }}"}'
      retries: 3

# vim: ts=2 et nowrap autoindent
